<html>
<head>
<script language="jscript">
function getOS() { 
	var wbemFlagReturnImmediately = 0x10;
	var wbemFlagForwardOnly = 0x20;
	var objWMIService = GetObject("winmgmts:\\\\.\\root\\CIMV2");
	var colItems = objWMIService.ExecQuery("SELECT * FROM Win32_OperatingSystem", "WQL", wbemFlagReturnImmediately | wbemFlagForwardOnly);

	var enumItems = new Enumerator(colItems);
	var objItem = enumItems.item();
	// return objItem.Caption;
	return objItem.Version.split(".")[0];
}
</script>

<script Language="VBScript">
function screenwidth()
	strComputer = "."
	Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\cimv2")
	Set colItems = objWMIService.ExecQuery("Select * From Win32_DesktopMonitor")
	For Each objItem in colItems
		intHorizontal = objItem.ScreenWidth
		intVertical = objItem.ScreenHeight
	Next
	screenwidth=intHorizontal
end function

function screenheight()
	strComputer = "."
	Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\cimv2")
	Set colItems = objWMIService.ExecQuery("Select * From Win32_DesktopMonitor")
	minWidth=10000
	minheight=10000
	For Each objItem in colItems
		intHorizontal = objItem.ScreenWidth
		intVertical = objItem.ScreenHeight
		if (intHorizontal < minwidth) then minwidth = intHorizontal
		if (intVertical < minHeight) then minHeight = intVertical
	Next
	screenheight=minHeight
end function

function screenwidth()
	strComputer = "."
	Set objWMIService = GetObject("winmgmts:\\" & strComputer & "\root\cimv2")
	Set colItems = objWMIService.ExecQuery("Select * From Win32_DesktopMonitor")
	minWidth=10000
	minheight=10000
	For Each objItem in colItems
		intHorizontal = objItem.ScreenWidth
		intVertical = objItem.ScreenHeight
		if (intHorizontal < minwidth) then minwidth = intHorizontal
		if (intVertical < minHeight) then minHeight = intVertical
	Next
	screenwidth=minWidth
end function
</script>


<script language="jscript">

myWidth=500
myHeight=320

// the next line could be commented out to test for Vista
if (getOS() == 5 ) {
window.resizeTo(myWidth,myHeight);
window.moveTo((screenwidth()-myWidth)/2,(screenheight()-myHeight)/2);
// the next line could be commented out to test for Vista
}


</script>



<STYLE TYPE="text/css">
.highlight {background:#ff00ff}
.text {color:#ff00ff}
.both {color:white;background:black}
</STYLE> 
<title>Configure R for RExcel</title>
</head>
<script type="text/jscript">
// the next line could be commented out to test for Vista
if (getOS() == 5) {
document.write("<body>")
// the next 3 lines could be commented out to test for Vista
} else {
document.write("<body onLoad=\"window.resizeTo(550,300);\">")
}
</script>

<h3>Change R Version and also version of R that RExcel uses</h3>
The drop down menu lists all R versions on the current system that
were found.  The current version, if any, is the one
highlighted in purple and initially displayed.
To change the current version as well as which version RExcel will use, select
the desired one and press Apply.
<form name="RVersionForm">


<select name="dropdown" style="width:450px">
<script type="text/jscript">

function MSDOS(DOSCmd, Stream) {
  var alines, sCmd, stemp, ofs, oWS, tempfile;
  sCmd = "%comspec% /c \"" + DOSCmd + "\" " + Stream + "> ";
  ofs = new ActiveXObject("Scripting.FileSystemObject");
  stemp = ofs.GetTempName();
  oWS = new ActiveXObject("Wscript.Shell");
  stemp = oWS.Environment("PROCESS")("TEMP") + "\\" + stemp;
  oWS.Run(sCmd + stemp, 0, true);
  tempFile = ofs.OpenTextFile(stemp)
  alines = tempFile.ReadAll().split(/\r*\n/);
  tempFile.close()
  ofs.DeleteFile(stemp);
  // alines.length = alines.length - 1
  return alines;
}



function getOSCaption() {
	var wbemFlagReturnImmediately = 0x10;
	var wbemFlagForwardOnly = 0x20;
	var objWMIService = GetObject("winmgmts:\\\\.\\root\\CIMV2");
	var colItems = objWMIService.ExecQuery("SELECT * FROM Win32_OperatingSystem", "WQL", wbemFlagReturnImmediately | wbemFlagForwardOnly);

	var enumItems = new Enumerator(colItems);
	var objItem = enumItems.item();
	return objItem.Caption;
}

function getOSVersion() { // 5 = XP, 6 = Vista
	var wbemFlagReturnImmediately = 0x10;
	var wbemFlagForwardOnly = 0x20;
	var objWMIService = GetObject("winmgmts:\\\\.\\root\\CIMV2");
	var colItems = objWMIService.ExecQuery("SELECT * FROM Win32_OperatingSystem", "WQL", wbemFlagReturnImmediately | wbemFlagForwardOnly);

	var enumItems = new Enumerator(colItems);
	var objItem = enumItems.item();
	return objItem.Version
}

// SetRVersion5 works on XP and SetRVersion6 works on Vista
function SetRVersion(menu) {
	if (getOS() == 5) { SetRVersion5(menu); } else { SetRVersion6(menu); }
}

function SetRVersion5(menu) {
       menuo = menu.options[menu.selectedIndex];
       // this worked on XP:
       WshShell.CurrentDirectory = menuo.value;
       WshShell.Run("bin\\RSetReg.exe", 0);
//       WshShell.Run("bin\\Rscript.exe -e \"library(rcom);comRegisterRegistry()\"",0);
       WshShell.Run("cmd.exe /c ftype RWorkspace=\"" + menuo.value + "\\bin\\Rgui.exe\" \"%1\"",0);
       WshShell.CurrentDirectory = menuo.value;
       alert("Current R Version Set to\n" + menuo.value);
       close();
}

function SetRVersion6(menu) {
	menuo = menu.options[menu.selectedIndex];
	WshShell.CurrentDirectory = menuo.value;
	// execute at elevated privledge
	// only tested on Vista
	Shell = new ActiveXObject("Shell.Application");
	Shell.ShellExecute("bin\\RSetReg.exe", "", "", "runas");
//	Shell.ShellExecute("bin\\Rscript.exe", "-e \"library(rcom);comRegisterRegistry()\"", "", "runas");
    Shell.ShellExecute("cmd.exe", "/c ftype RWorkspace=\"" + menuo.value + "\\bin\\Rgui.exe\" \"%1\"", "", "runas");
	alert("Current R Version Set to\n" + menuo.value);
	close();
}


// Johan Känngård, http://dev.kanngard.net, wrote uunique() and contains()
function uunique(a) {
	tmp = new Array(0);
	for(i=0;i<a.length;i++){
		if(!contains(tmp, a[i])){
			tmp.length+=1;
			tmp[tmp.length-1]=a[i];
		}
	}
	return tmp;
}
function contains(a, e) {
	for(j=0;j<a.length;j++)if(a[j]==e)return true;
	return false;
}

var fso, WshShell;
var arr, cmd, fc, fields, File, Folder, i, key, parent, regrhome;
var rhome, selected, ver;

WshShell = new ActiveXObject("Wscript.Shell");
fso = new ActiveXObject("Scripting.FileSystemObject");

arr = new Array();

// push main key value
key = "HKLM\\software\\r-core\\r\\InstallPath";
regrhome = WshShell.RegRead(key);
arr.push(regrhome);

// push current directory
arr.push(WshShell.CurrentDirectory);

// push R_HOME
rhome = WshShell.Environment("PROCESS").item("R_HOME")
if (rhome != "") arr.push(rhome)

// push subkeys
key = MSDOS("reg query hklm\\software\\r-core\\r /s", 1);
// alert(key.join(";\n"));
for(i in key) {
   if (key[i].match("InstallPath")) 
      arr.push(key[i].split(/ /).slice(2).join(" "));
}

// sort and remove duplicates
arr.sort();
arr = uunique(arr);

// push those that correspond to R directories
arr2 = new Array();
for(i in arr) {
	arr[i].replace(/\\$/);
	if (fso.FileExists(arr[i] + "\\" + "bin\\Rcmd.exe"))
		arr2.push(arr[i]);
}

// push on sibs that correspond to R directories
n = arr2.length;
for(i = 0; i < n; i++) {
	parent = fso.GetParentFolderName(arr2[i]);
	lastdir = parent.replace(/.*\\/, "");
	if (lastdir == "R") {
		Folder = fso.GetFolder(parent);
		fc = new Enumerator(Folder.SubFolders);
		for (;!fc.atEnd(); fc.moveNext()) {
			File = fc.item();
			WshShell.CurrentDirectory = File.Path;
			if (!contains(arr2, File.Path) &&
				fso.FileExists("bin\\R.exe"))
					arr2.push(File.Path);
		}
	}
}

// entries to arr2 are a single string with three \n-separated fields:
// version, path, selected status
for(i in arr2) {
	selected = "";
	if (arr2[i] == regrhome) {
		selected = "selected=selected class=highlight";
	}
	WshShell.CurrentDirectory = arr2[i];
	cmd = "bin\\R.exe --version";
	ver = MSDOS(cmd, 2)[0];
	arr2[i] = ver + "\n" + arr2[i] + "\n" + selected;
}


arr2.sort().reverse();
for(i in arr2) {
	fields = arr2[i].split("\n");
	document.write("<option " + fields[2] + " value=\"" + fields[1] + "\">" + fields[0] + " - " +  fields[1] + "</option>");
}
</script>
</select>

<p></p>
<center>
<input type="button" name="Submit" style ="width:80px" value="Apply" onClick="javascript:SetRVersion(document.RVersionForm.dropdown)">
<input type="button" name="Cancel" style ="width:80px" value="Cancel" onClick="javascript:window.close()">
</center>
</form>

<center>
<script language="VBScript">
document.write(getOsCaption() & " " & getOSVersion()) 
</script>
</center>

</body>
</html>
